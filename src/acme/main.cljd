(ns acme.main
  (:require
   [api.albums :as api]
   ["dart:async" :as async]
   [pages.album_detail :as album-detail]
   ["list_view_refreshable.dart" :as ext-refresh]
   ["package:flutter/material.dart" :as m]
   [cljd.flutter :as f]))

(defonce ^:private app-state
  (atom {:albums []}))

(defn- fetch-albums []
  (swap! app-state assoc :albums (await (api.albums/get-albums))))

(defn- navigate [navigator page name]
  (.push
   navigator (#/(m/MaterialPageRoute Object)
              .settings (m/RouteSettings .name name)
              .builder
              (f/build page))))

(defn- build-list-items [albums]
  (f/widget
   :get [m/Navigator]
   (-> (m/ListView.builder
        .itemCount (count albums)
        .itemBuilder
        (f/build
         #_{:clj-kondo/ignore [:unresolved-symbol]}
         [idx]
         (let [album (get-in albums #_{:clj-kondo/ignore [:unresolved-symbol]} [idx])]
           (m/ListTile
            .onTap (fn [] (navigate navigator
                                    (album-detail/view album)
                                    (str "/album-detail/" (.-id album))))
            .title (m/Text (.-title album))))))
       ext-refresh/ListViewRefreshable
       (.refreshable
        (fn []
          (await (fetch-albums)))))))

(defn main []
  (f/run
   (m/MaterialApp
    .title "Fetch Data List Example"
    .theme (m/ThemeData .primarySwatch m/Colors.blue))
   .home
   (m/Scaffold .appBar (m/AppBar .title (m/Text "Fetch Data List Example")))
   .body
   :watch [fetch-albums]
   (m/Center)
   :watch [{:keys [albums]} app-state]
   (if-some [{} albums]
     (build-list-items albums)
     (m/CircularProgressIndicator))))